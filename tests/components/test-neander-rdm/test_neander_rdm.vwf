/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inAC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inAC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inAC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inAC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inAC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inAC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inAC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inAC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inAC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inAC";
}

SIGNAL("inMEM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inMEM[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("inMEM[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("inMEM[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("inMEM[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("inMEM[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("inMEM[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("inMEM[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("inMEM[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inMEM";
}

SIGNAL("loadRDM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RDM_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RDM_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("RDM_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("RDM_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("RDM_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("RDM_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("RDM_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("RDM_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("RDM_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RDM_out";
}

SIGNAL("read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 8.0;
	}
}

TRANSITION_LIST("inAC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 300.0;
	}
}

TRANSITION_LIST("inAC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("inAC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 490.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("inAC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("inAC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("inAC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("inAC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 90.0;
	}
}

TRANSITION_LIST("inAC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 350.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("inMEM[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("inMEM[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 230.0;
	}
}

TRANSITION_LIST("inMEM[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 90.0;
	}
}

TRANSITION_LIST("inMEM[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 590.0;
	}
}

TRANSITION_LIST("inMEM[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("inMEM[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("inMEM[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 230.0;
	}
}

TRANSITION_LIST("inMEM[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("loadRDM")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("RDM_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("RDM_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("RDM_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("RDM_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("RDM_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("RDM_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("RDM_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("RDM_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 115.0;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 125.0;
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 950.0;
		LEVEL 0 FOR 50.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "loadRDM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inAC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inAC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "inMEM[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "RDM_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
